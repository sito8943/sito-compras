@layer properties;
@layer theme,base,components,utilities;
@layer theme {
    :root,
    :host {
        --font-sans: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
            'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
        --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
            'Liberation Mono', 'Courier New', monospace;
        --color-red-500: oklch(63.7% 0.237 25.331);
        --color-white: #fff;
        --spacing: 0.25rem;
        --text-sm: 0.875rem;
        --text-sm--line-height: calc(1.25 / 0.875);
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75 / 1.125);
        --text-3xl: 1.875rem;
        --text-3xl--line-height: 1.2;
        --font-weight-medium: 500;
        --font-weight-bold: 700;
        --radius-sm: 0.25rem;
        --radius-4xl: 2rem;
        --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
        --default-transition-duration: 0.15s;
        --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        --default-font-family: var(--font-sans);
        --default-mono-font-family: var(--font-mono);
        --color-primary: #4cc2ff;
        --color-bg-primary: #013a55;
        --color-hover-primary: #48b2e9;
        --color-base-dark: hsl(0 0% 90%);
        --color-base: hsl(0 0% 95%);
        --color-base-light: hsl(0 0% 100%);
        --color-text: #0d0d0d;
        --color-border: hsl(0 0% 80%);
        --color-text-muted: hsl(0 0% 30%);
        --color-bg-success: hsl(149.76, 68%, 36%);
        --color-success: #fbfbfb;
        --color-bg-error: hsl(0, 50%, 51%);
        --color-error: #fbfbfb;
    }
}
@layer base {
    *,
    :after,
    :before,
    ::backdrop,
    ::file-selector-button {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        border: 0 solid;
    }
    html,
    :host {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        font-family: var(
            --default-font-family,
            ui-sans-serif,
            system-ui,
            sans-serif,
            'Apple Color Emoji',
            'Segoe UI Emoji',
            'Segoe UI Symbol',
            'Noto Color Emoji'
        );
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }
    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }
    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-size: inherit;
        font-weight: inherit;
    }
    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }
    b,
    strong {
        font-weight: bolder;
    }
    code,
    kbd,
    samp,
    pre {
        font-family: var(
            --default-mono-font-family,
            ui-monospace,
            SFMono-Regular,
            Menlo,
            Monaco,
            Consolas,
            'Liberation Mono',
            'Courier New',
            monospace
        );
        font-feature-settings: var(
            --default-mono-font-feature-settings,
            normal
        );
        font-variation-settings: var(
            --default-mono-font-variation-settings,
            normal
        );
        font-size: 1em;
    }
    small {
        font-size: 80%;
    }
    sub,
    sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
    }
    sub {
        bottom: -0.25em;
    }
    sup {
        top: -0.5em;
    }
    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }
    :-moz-focusring {
        outline: auto;
    }
    progress {
        vertical-align: baseline;
    }
    summary {
        display: list-item;
    }
    ol,
    ul,
    menu {
        list-style: none;
    }
    img,
    svg,
    video,
    canvas,
    audio,
    iframe,
    embed,
    object {
        display: block;
        vertical-align: middle;
    }
    img,
    video {
        max-width: 100%;
        height: auto;
    }
    button,
    input,
    select,
    optgroup,
    textarea,
    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        border-radius: 0;
        background-color: transparent;
        opacity: 1;
    }
    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }
    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px;
    }
    ::file-selector-button {
        margin-inline-end: 4px;
    }
    ::placeholder {
        opacity: 1;
    }
    @supports (not (-webkit-appearance: -apple-pay-button)) or
        (contain-intrinsic-size: 1px) {
        ::placeholder {
            color: currentcolor;
        }
        @supports (color: color-mix(in lab, red, red)) {
             {
                color: color-mix(in oklab, currentcolor 50%, transparent);
            }
        }
    }
    textarea {
        resize: vertical;
    }
    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }
    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }
    ::-webkit-datetime-edit {
        display: inline-flex;
    }
    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }
    ::-webkit-datetime-edit,
    ::-webkit-datetime-edit-year-field,
    ::-webkit-datetime-edit-month-field,
    ::-webkit-datetime-edit-day-field,
    ::-webkit-datetime-edit-hour-field,
    ::-webkit-datetime-edit-minute-field,
    ::-webkit-datetime-edit-second-field,
    ::-webkit-datetime-edit-millisecond-field,
    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }
    ::-webkit-calendar-picker-indicator {
        line-height: 1;
    }
    :-moz-ui-invalid {
        box-shadow: none;
    }
    button,
    input:where([type='button'], [type='reset'], [type='submit']),
    ::file-selector-button {
        appearance: button;
    }
    ::-webkit-inner-spin-button,
    ::-webkit-outer-spin-button {
        height: auto;
    }
    [hidden]:where(:not([hidden='until-found'])) {
        display: none !important;
    }
}
@layer utilities {
    .pointer-events-none {
        pointer-events: none;
    }
    .collapse {
        visibility: collapse;
    }
    .visible {
        visibility: visible;
    }
    .absolute {
        position: absolute;
    }
    .fixed {
        position: fixed;
    }
    .relative {
        position: relative;
    }
    .static {
        position: static;
    }
    .container {
        width: 100%;
    }
    @media (width >= 28rem) {
        .container {
            max-width: 28rem;
        }
    }
    @media (width >= 40rem) {
        .container {
            max-width: 40rem;
        }
    }
    @media (width >= 48rem) {
        .container {
            max-width: 48rem;
        }
    }
    @media (width >= 64rem) {
        .container {
            max-width: 64rem;
        }
    }
    @media (width >= 80rem) {
        .container {
            max-width: 80rem;
        }
    }
    @media (width >= 96rem) {
        .container {
            max-width: 96rem;
        }
    }
    .block {
        display: block;
    }
    .contents {
        display: contents;
    }
    .flex {
        display: flex;
    }
    .hidden {
        display: none;
    }
    .inline {
        display: inline;
    }
    .inline-block {
        display: inline-block;
    }
    .table {
        display: table;
    }
    .h-10 {
        height: calc(var(--spacing) * 10);
    }
    .h-full {
        height: 100%;
    }
    .w-full {
        width: 100%;
    }
    .transform {
        transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z)
            var(--tw-skew-x) var(--tw-skew-y);
    }
    .flex-col {
        flex-direction: column;
    }
    .items-center {
        align-items: center;
    }
    .justify-center {
        justify-content: center;
    }
    .gap-2 {
        gap: calc(var(--spacing) * 2);
    }
    .border {
        border-style: var(--tw-border-style);
        border-width: 1px;
    }
    .bg-base {
        background-color: var(--color-base);
    }
    .px-5 {
        padding-inline: calc(var(--spacing) * 5);
    }
    .py-3 {
        padding-block: calc(var(--spacing) * 3);
    }
    .text-3xl {
        font-size: var(--text-3xl);
        line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
    }
    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
    }
    .text-text {
        color: var(--color-text);
    }
    .capitalize {
        text-transform: capitalize;
    }
    .blur {
        --tw-blur: blur(8px);
        filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
            var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
            var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
    }
    .filter {
        filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
            var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
            var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
    }
    @media (width < 28rem) {
        .max-xs\:hidden {
            display: none;
        }
    }
}
@layer theme,base,components,utilities;
@layer theme;
@layer base {
    *,
    :after,
    :before,
    ::backdrop,
    ::file-selector-button {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        border: 0 solid;
    }
    html,
    :host {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        font-family: var(
            --default-font-family,
            ui-sans-serif,
            system-ui,
            sans-serif,
            'Apple Color Emoji',
            'Segoe UI Emoji',
            'Segoe UI Symbol',
            'Noto Color Emoji'
        );
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }
    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }
    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-size: inherit;
        font-weight: inherit;
    }
    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }
    b,
    strong {
        font-weight: bolder;
    }
    code,
    kbd,
    samp,
    pre {
        font-family: var(
            --default-mono-font-family,
            ui-monospace,
            SFMono-Regular,
            Menlo,
            Monaco,
            Consolas,
            'Liberation Mono',
            'Courier New',
            monospace
        );
        font-feature-settings: var(
            --default-mono-font-feature-settings,
            normal
        );
        font-variation-settings: var(
            --default-mono-font-variation-settings,
            normal
        );
        font-size: 1em;
    }
    small {
        font-size: 80%;
    }
    sub,
    sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
    }
    sub {
        bottom: -0.25em;
    }
    sup {
        top: -0.5em;
    }
    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }
    :-moz-focusring {
        outline: auto;
    }
    progress {
        vertical-align: baseline;
    }
    summary {
        display: list-item;
    }
    ol,
    ul,
    menu {
        list-style: none;
    }
    img,
    svg,
    video,
    canvas,
    audio,
    iframe,
    embed,
    object {
        display: block;
        vertical-align: middle;
    }
    img,
    video {
        max-width: 100%;
        height: auto;
    }
    button,
    input,
    select,
    optgroup,
    textarea,
    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        border-radius: 0;
        background-color: transparent;
        opacity: 1;
    }
    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }
    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px;
    }
    ::file-selector-button {
        margin-inline-end: 4px;
    }
    ::placeholder {
        opacity: 1;
    }
    @supports (not (-webkit-appearance: -apple-pay-button)) or
        (contain-intrinsic-size: 1px) {
        ::placeholder {
            color: currentcolor;
        }
        @supports (color: color-mix(in lab, red, red)) {
             {
                color: color-mix(in oklab, currentcolor 50%, transparent);
            }
        }
    }
    textarea {
        resize: vertical;
    }
    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }
    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }
    ::-webkit-datetime-edit {
        display: inline-flex;
    }
    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }
    ::-webkit-datetime-edit,
    ::-webkit-datetime-edit-year-field,
    ::-webkit-datetime-edit-month-field,
    ::-webkit-datetime-edit-day-field,
    ::-webkit-datetime-edit-hour-field,
    ::-webkit-datetime-edit-minute-field,
    ::-webkit-datetime-edit-second-field,
    ::-webkit-datetime-edit-millisecond-field,
    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }
    ::-webkit-calendar-picker-indicator {
        line-height: 1;
    }
    :-moz-ui-invalid {
        box-shadow: none;
    }
    button,
    input:where([type='button'], [type='reset'], [type='submit']),
    ::file-selector-button {
        appearance: button;
    }
    ::-webkit-inner-spin-button,
    ::-webkit-outer-spin-button {
        height: auto;
    }
    [hidden]:where(:not([hidden='until-found'])) {
        display: none !important;
    }
}
@layer utilities;
a,
button {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
}
input,
p {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-text-muted);
}
.button {
    display: flex;
    cursor: pointer;
    align-items: center;
    justify-content: center;
    gap: calc(var(--spacing) * 2);
    border-radius: var(--radius-4xl);
    background-color: var(--color-base);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    color: var(--color-text);
    transition-property: color, background-color, border-color, outline-color,
        text-decoration-color, fill, stroke, --tw-gradient-from,
        --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform,
        translate, scale, rotate, filter, -webkit-backdrop-filter,
        backdrop-filter, display, visibility, content-visibility, overlay,
        pointer-events;
    transition-timing-function: var(
        --tw-ease,
        var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
}
@media (hover: hover) {
    .button:hover {
        background-color: var(--color-base-light);
    }
}
@media (hover: hover) {
    .button.close:hover {
        background-color: var(--color-red-500);
    }
}
.icon-button {
    display: flex;
    height: calc(var(--spacing) * 7);
    width: calc(var(--spacing) * 7);
    align-items: center;
    justify-content: center;
    border-radius: calc(infinity * 1px);
    background-color: var(--color-base);
}
@media (hover: hover) {
    .icon-button:hover {
        background-color: var(--color-base-light);
    }
}
.fab {
    position: fixed;
    right: calc(var(--spacing) * 4);
    bottom: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 12);
    width: calc(var(--spacing) * 12);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
}
.input {
    border-radius: var(--radius-sm);
    border-style: var(--tw-border-style);
    border-width: 2px;
    border-color: var(--color-border);
    background-color: var(--color-base);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 1);
    color: var(--color-white);
}
.input.error {
    border-color: var(--color-red-500);
}
@media (hover: hover) {
    :is(svg.primary, p.primary, a.primary):hover {
        color: var(--color-hover-primary);
    }
}
.outlined {
    border-style: var(--tw-border-style);
    border-width: 2px;
    border-color: var(--color-border);
    background-color: var(--color-base);
    color: var(--color-text);
}
@media (hover: hover) {
    .outlined:hover {
        background-color: var(--color-border);
    }
}
.outlined.primary {
    border-color: var(--color-bg-primary);
}
@media (hover: hover) {
    .outlined.primary:hover {
        border-color: var(--color-primary);
    }
}
@media (hover: hover) {
    .outlined.primary:hover {
        background-color: var(--color-primary);
    }
}
@media (hover: hover) {
    .outlined.primary:hover {
        color: var(--color-base);
    }
}
.submit.primary {
    background-color: var(--color-bg-primary);
    color: var(--color-base);
}
@media (hover: hover) {
    .submit.primary:hover {
        background-color: var(--color-primary);
    }
}
@media (hover: hover) {
    .submit.primary:hover {
        color: var(--color-text);
    }
}
.primary {
    transition-property: color, background-color, border-color, outline-color,
        text-decoration-color, fill, stroke, --tw-gradient-from,
        --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform,
        translate, scale, rotate, filter, -webkit-backdrop-filter,
        backdrop-filter, display, visibility, content-visibility, overlay,
        pointer-events;
    transition-timing-function: var(
        --tw-ease,
        var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 0.3s;
    transition-duration: 0.3s;
}
.password-icon {
    top: 50%;
    transform: translateY(-50%);
}
@font-face {
    font-family: Poppins Variable;
    font-style: normal;
    font-weight: 100 900;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/poppins/v20/pxiByp8kv8JHgFVrLDz8Z1xlFQ.woff2)
        format('woff2-variations');
}
@font-face {
    font-family: Roboto Variable;
    font-style: normal;
    font-display: swap;
    font-weight: 100 900;
    src: url(https://cdn.jsdelivr.net/fontsource/fonts/roboto:vf@latest/latin-wght-normal.woff2)
        format('woff2-variations');
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,
        U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191,
        U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
textarea {
    resize: none;
}
.animated {
    transition-property: color, background-color, border-color, outline-color,
        text-decoration-color, fill, stroke, --tw-gradient-from,
        --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform,
        translate, scale, rotate, filter, -webkit-backdrop-filter,
        backdrop-filter, display, visibility, content-visibility, overlay,
        pointer-events;
    transition-timing-function: var(
        --tw-ease,
        var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 0.3s;
    transition-duration: 0.3s;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
}
h1,
h2,
th,
th span,
.poppins {
    font-family: Poppins, sans-serif;
    font-weight: 700;
}
p,
a,
button,
h3,
input,
textarea,
select,
td,
label,
.roboto {
    font-family: Roboto Variable, sans-serif;
}
main {
    height: 100svh;
    width: 100%;
    display: flex;
    flex: 1;
    flex-direction: column;
    background-color: var(--color-base-dark);
}
main h1,
main h2,
main h3 {
    color: var(--color-text);
}
.opacity {
    animation: opacity 0.3s ease-in-out;
}
@keyframes opacity {
    0% {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
.rotate {
    animation: rotate 1s infinite;
    --tw-ease: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
@keyframes rotate {
    0% {
        rotate: 0;
    }
    to {
        rotate: 360deg;
    }
}
.elevated {
    box-shadow: 0 3px 8px #0000004f;
}
.success {
    background-color: var(--color-bg-success);
    color: var(--color-success);
}
.error {
    background-color: var(--color-bg-error);
    color: var(--color-error);
}
.inverted-success {
    color: var(--color-bg-success);
}
.inverted-error {
    color: var(--color-bg-error);
}
.appear {
    animation: appear 0.5s ease 1;
}
.disappear {
    animation: disappear 0.5s ease 1;
}
@keyframes appear {
    0% {
        opacity: 0;
        transform: translateY(15px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
@keyframes disappear {
    0% {
        opacity: 1;
        transform: translateY(0);
    }
    to {
        opacity: 0;
        transform: translateY(15px);
    }
}
@property --tw-rotate-x {
    syntax: '*';
    inherits: false;
}
@property --tw-rotate-y {
    syntax: '*';
    inherits: false;
}
@property --tw-rotate-z {
    syntax: '*';
    inherits: false;
}
@property --tw-skew-x {
    syntax: '*';
    inherits: false;
}
@property --tw-skew-y {
    syntax: '*';
    inherits: false;
}
@property --tw-border-style {
    syntax: '*';
    inherits: false;
    initial-value: solid;
}
@property --tw-font-weight {
    syntax: '*';
    inherits: false;
}
@property --tw-blur {
    syntax: '*';
    inherits: false;
}
@property --tw-brightness {
    syntax: '*';
    inherits: false;
}
@property --tw-contrast {
    syntax: '*';
    inherits: false;
}
@property --tw-grayscale {
    syntax: '*';
    inherits: false;
}
@property --tw-hue-rotate {
    syntax: '*';
    inherits: false;
}
@property --tw-invert {
    syntax: '*';
    inherits: false;
}
@property --tw-opacity {
    syntax: '*';
    inherits: false;
}
@property --tw-saturate {
    syntax: '*';
    inherits: false;
}
@property --tw-sepia {
    syntax: '*';
    inherits: false;
}
@property --tw-drop-shadow {
    syntax: '*';
    inherits: false;
}
@property --tw-drop-shadow-color {
    syntax: '*';
    inherits: false;
}
@property --tw-drop-shadow-alpha {
    syntax: '<percentage>';
    inherits: false;
    initial-value: 100%;
}
@property --tw-drop-shadow-size {
    syntax: '*';
    inherits: false;
}
@property --tw-duration {
    syntax: '*';
    inherits: false;
}
@property --tw-ease {
    syntax: '*';
    inherits: false;
}
@layer properties {
    @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or
        ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
        *,
        :before,
        :after,
        ::backdrop {
            --tw-rotate-x: initial;
            --tw-rotate-y: initial;
            --tw-rotate-z: initial;
            --tw-skew-x: initial;
            --tw-skew-y: initial;
            --tw-border-style: solid;
            --tw-font-weight: initial;
            --tw-blur: initial;
            --tw-brightness: initial;
            --tw-contrast: initial;
            --tw-grayscale: initial;
            --tw-hue-rotate: initial;
            --tw-invert: initial;
            --tw-opacity: initial;
            --tw-saturate: initial;
            --tw-sepia: initial;
            --tw-drop-shadow: initial;
            --tw-drop-shadow-color: initial;
            --tw-drop-shadow-alpha: 100%;
            --tw-drop-shadow-size: initial;
            --tw-duration: initial;
            --tw-ease: initial;
        }
    }
}
